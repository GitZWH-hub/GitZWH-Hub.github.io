<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XANDER</title>
  
  <subtitle>何其荣幸</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-19T13:53:06.731Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yZhangWH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac下搭建我的博客</title>
    <link href="http://example.com/2021/07/19/Mac%E4%B8%8B%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2021/07/19/Mac%E4%B8%8B%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-07-19T07:19:10.748Z</published>
    <updated>2021-07-19T13:53:06.731Z</updated>
    
    <content type="html"><![CDATA[<p>萌生写blog的想法，花费半天时间使用Hexo、GitHub Pages来搭建自己的个性化博客。</p><h2 id="1-GitHub-Pages"><a href="#1-GitHub-Pages" class="headerlink" title="1. GitHub Pages"></a>1. GitHub Pages</h2><h3 id="1-GitHub账号注册"><a href="#1-GitHub账号注册" class="headerlink" title="(1) GitHub账号注册"></a>(1) GitHub账号注册</h3><p>注册过程省略</p><h3 id="2-创建新的仓库"><a href="#2-创建新的仓库" class="headerlink" title="(2) 创建新的仓库"></a>(2) 创建新的仓库</h3><p>点击右上角头像，选择Your repositories；新界面上选择New,如下填写，Create repository。</p><p><img src="https://yzhangwh-1253708708.cos.ap-shanghai.myqcloud.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87/png1.png"></p><h3 id="3-配置SSH-Keys"><a href="#3-配置SSH-Keys" class="headerlink" title="(3) 配置SSH Keys"></a>(3) 配置SSH Keys</h3><p>打开终端，输入命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cd ~/.ssh</span><br></pre></td></tr></table></figure><p>如果提示 No such file or directory 说明是第一次使用 git。<br>接下来生成新的SSH Keys</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -C &quot;yzhangwh@126.com&quot;</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车&gt;</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):&lt;输入加密串&gt;&lt;如不想设置密码可直接回车表示为空&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;&lt;接着回车确认&gt;</span><br></pre></td></tr></table></figure><p>接下来，将SSH key添加到GitHub<br>打开本地生成的.ssh/id_rsa.pub（若看不到，则需显示隐藏文件）,准确复制文件中所有内容。然后进入github主页，点击右上角头像进入settings，选择SSH and GPG keys，再点击New SSH Key。将内容复制进key，title可以为空。最后Add SSH key。<br>测试是否成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure><p>接下来会出现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The authenticity of host &#x27;GitHub.com (207.97.227.239)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?&lt;输入yes&gt;</span><br><span class="line">Hi 你的用户名! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>代表SSH key添加成功<br>接下来测试github pages是否创建成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo &quot;# GitZWH-hub.github.io&quot; &gt;&gt; README.md</span><br><span class="line"># git init    </span><br><span class="line"># git add README.md</span><br><span class="line"># git commit -m &quot;first commit&quot;</span><br><span class="line"># git remote add origin https://github.com/GitZWH-hub/GitZWH-hub.github.io.git</span><br><span class="line"># git push -u origin master</span><br></pre></td></tr></table></figure><p>之后浏览器中输入 GitZWH-hub.github.io，如果成功出现页面，则GitHub Pages配置成功。</p><h2 id="2-Hexo"><a href="#2-Hexo" class="headerlink" title="2. Hexo"></a>2. Hexo</h2><h3 id="1-Node-js安装"><a href="#1-Node-js安装" class="headerlink" title="(1) Node.js安装"></a>(1) Node.js安装</h3><p>检查是否有brew</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># brew -v</span><br></pre></td></tr></table></figure><p>如果顺利显示版本号，说明homebrew已经安装。否则，输入以下命令进行安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; </span><br></pre></td></tr></table></figure><p>安装Node.js</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># brew link node</span><br><span class="line"># brew uninstall node</span><br><span class="line"># brew install node</span><br></pre></td></tr></table></figure><h3 id="2-Hexo安装"><a href="#2-Hexo安装" class="headerlink" title="(2) Hexo安装"></a>(2) Hexo安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="3-Hexo建站"><a href="#3-Hexo建站" class="headerlink" title="(3) Hexo建站"></a>(3) Hexo建站</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo init MyGitBlog</span><br><span class="line"># cd MyBigBlog</span><br><span class="line"># npm install</span><br></pre></td></tr></table></figure><h3 id="4-Hexo测试"><a href="#4-Hexo测试" class="headerlink" title="(4) Hexo测试"></a>(4) Hexo测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cd MyGitBlog</span><br><span class="line"># hexo clean</span><br><span class="line"># hexo g</span><br><span class="line"># hexo s</span><br></pre></td></tr></table></figure><p>如果出现以下信息，则成功。可进入本地浏览器查看<a href="http://localhost:4000/">localhost:4000</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h3 id="5-Hexo部署到Git"><a href="#5-Hexo部署到Git" class="headerlink" title="(5) Hexo部署到Git"></a>(5) Hexo部署到Git</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改 _config.yml 文件中的配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/GitZWH-hub/GitZWH-Hub.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>⚠️注意：所有的冒号后面都严格要求有一个空格<br>继续执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo clean</span><br><span class="line"># hexo g</span><br><span class="line"># hexo d</span><br></pre></td></tr></table></figure><p>现在，登录到GitHub Pages 上查看博客<a href="https://gitzwh-hub.github.io/">GitHub Pages</a>。<br>此时，应该可以看到和本地上看到的一样的画面了。</p><h2 id="3-设置主题"><a href="#3-设置主题" class="headerlink" title="3. 设置主题"></a>3. 设置主题</h2><p>这里选用butterfly主题，也可以使用next等。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cd MyGitBlog</span><br><span class="line"># git clone https://github.com/iissnan/hexo-theme-next themes/next  #克隆next主题到本地</span><br></pre></td></tr></table></figure><p>在站点根目录下的配置文件 _config.yml 中，找到 theme字段，并将其值更改为 next。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next  </span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo s</span><br></pre></td></tr></table></figure><p>结果查看 <a href="http://localhost:4000/">localhost:4000</a></p><p><img src="https://yzhangwh-1253708708.cos.ap-shanghai.myqcloud.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87/blog_start.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;萌生写blog的想法，花费半天时间使用Hexo、GitHub Pages来搭建自己的个性化博客。&lt;/p&gt;
&lt;h2 id=&quot;1-GitHub-Pages&quot;&gt;&lt;a href=&quot;#1-GitHub-Pages&quot; class=&quot;headerlink&quot; title=&quot;1. GitHu</summary>
      
    
    
    
    
  </entry>
  
</feed>
